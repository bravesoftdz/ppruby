
const
{$if defined(RUBY2) and (sizeof(VALUE) >= sizeof(cdouble))}
  USE_FLONUM = True;

  Qfalse : VALUE = ( value : $00 );
  Qtrue  : VALUE = ( value : $14 );
  Qnil   : VALUE = ( value : $08 );
  Qundef : VALUE = ( value : $34 );

  IMMEDIATE_MASK = $07;
  FIXNUM_FLAG    = $01;
  FLONUM_MASK    = $03;
  FLONUM_FLAG    = $02;
  SYMBOL_FLAG    = $0c;
  SPECIAL_SHIFT  = 8;
{$else}
  USE_FLONUM = False;

  Qfalse : VALUE = ( value : 0 );
  Qtrue  : VALUE = ( value : 2 );
  Qnil   : VALUE = ( value : 4 );
  Qundef : VALUE = ( value : 6 );

  IMMEDIATE_MASK = $03;
  FIXNUM_FLAG    = $01;
  FLONUM_MASK    = $00;
  FLONUM_FLAG    = $02;
  SYMBOL_FLAG    = $0e;
  SPECIAL_SHIFT  = 8;
{$endif}

var
  rb_cArray         : VALUE; cvar; external RUBY_LIB;
  rb_cBasicObject   : VALUE; cvar; external RUBY_LIB;
  rb_cBignum        : VALUE; cvar; external RUBY_LIB;
  rb_cBinding       : VALUE; cvar; external RUBY_LIB;
  rb_cClass         : VALUE; cvar; external RUBY_LIB;
  rb_cComplex       : VALUE; cvar; external RUBY_LIB;
  rb_cData          : VALUE; cvar; external RUBY_LIB;
  rb_cDir           : VALUE; cvar; external RUBY_LIB;
  rb_cEncoding      : VALUE; cvar; external RUBY_LIB;
  rb_cEnumerator    : VALUE; cvar; external RUBY_LIB;
  rb_cEnv           : VALUE; cvar; external RUBY_LIB;
  rb_cFalseClass    : VALUE; cvar; external RUBY_LIB;
  rb_cFile          : VALUE; cvar; external RUBY_LIB;
  rb_cFixnum        : VALUE; cvar; external RUBY_LIB;
  rb_cFloat         : VALUE; cvar; external RUBY_LIB;
  rb_cHash          : VALUE; cvar; external RUBY_LIB;
  rb_cInteger       : VALUE; cvar; external RUBY_LIB;
  rb_cIO            : VALUE; cvar; external RUBY_LIB;
  rb_cISeq          : VALUE; cvar; external RUBY_LIB;
  rb_cMatch         : VALUE; cvar; external RUBY_LIB;
  rb_cMethod        : VALUE; cvar; external RUBY_LIB;
  rb_cModule        : VALUE; cvar; external RUBY_LIB;
  rb_cNameErrorMesg : VALUE; cvar; external RUBY_LIB;
  rb_cNilClass      : VALUE; cvar; external RUBY_LIB;
  rb_cNumeric       : VALUE; cvar; external RUBY_LIB;
  rb_cObject        : VALUE; cvar; external RUBY_LIB;
  rb_cProc          : VALUE; cvar; external RUBY_LIB;
  rb_cRandom        : VALUE; cvar; external RUBY_LIB;
  rb_cRange         : VALUE; cvar; external RUBY_LIB;
  rb_cRational      : VALUE; cvar; external RUBY_LIB;
  rb_cRegexp        : VALUE; cvar; external RUBY_LIB;
  rb_cRubyVM        : VALUE; cvar; external RUBY_LIB;
  rb_cStat          : VALUE; cvar; external RUBY_LIB;
  rb_cString        : VALUE; cvar; external RUBY_LIB;
  rb_cStruct        : VALUE; cvar; external RUBY_LIB;
  rb_cSymbol        : VALUE; cvar; external RUBY_LIB;
  rb_cThread        : VALUE; cvar; external RUBY_LIB;
  rb_cTime          : VALUE; cvar; external RUBY_LIB;
  rb_cTrueClass     : VALUE; cvar; external RUBY_LIB;
  rb_cUnboundMethod : VALUE; cvar; external RUBY_LIB;
  rb_eArgError         : VALUE; cvar; external RUBY_LIB;
  rb_eEncCompatError   : VALUE; cvar; external RUBY_LIB;
  rb_eEncodingError    : VALUE; cvar; external RUBY_LIB;
  rb_eEOFError         : VALUE; cvar; external RUBY_LIB;
  rb_eException        : VALUE; cvar; external RUBY_LIB;
  rb_eFatal            : VALUE; cvar; external RUBY_LIB;
  rb_eFloatDomainError : VALUE; cvar; external RUBY_LIB;
  rb_eIndexError       : VALUE; cvar; external RUBY_LIB;
  rb_eInterrupt        : VALUE; cvar; external RUBY_LIB;
  rb_eIOError          : VALUE; cvar; external RUBY_LIB;
  rb_eKeyError         : VALUE; cvar; external RUBY_LIB;
  rb_eLoadError        : VALUE; cvar; external RUBY_LIB;
  rb_eLocalJumpError   : VALUE; cvar; external RUBY_LIB;
  rb_eMathDomainError  : VALUE; cvar; external RUBY_LIB;
  rb_eNameError        : VALUE; cvar; external RUBY_LIB;
  rb_eNoMemError       : VALUE; cvar; external RUBY_LIB;
  rb_eNoMethodError    : VALUE; cvar; external RUBY_LIB;
  rb_eNotImpError      : VALUE; cvar; external RUBY_LIB;
  rb_eRangeError       : VALUE; cvar; external RUBY_LIB;
  rb_eRegexpError      : VALUE; cvar; external RUBY_LIB;
  rb_eRuntimeError     : VALUE; cvar; external RUBY_LIB;
  rb_eScriptError      : VALUE; cvar; external RUBY_LIB;
  rb_eSecurityError    : VALUE; cvar; external RUBY_LIB;
  rb_eSignal           : VALUE; cvar; external RUBY_LIB;
  rb_eStandardError    : VALUE; cvar; external RUBY_LIB;
  rb_eStopIteration    : VALUE; cvar; external RUBY_LIB;
  rb_eSyntaxError      : VALUE; cvar; external RUBY_LIB;
  rb_eSysStackError    : VALUE; cvar; external RUBY_LIB;
  rb_eSystemCallError  : VALUE; cvar; external RUBY_LIB;
  rb_eSystemExit       : VALUE; cvar; external RUBY_LIB;
  rb_eThreadError      : VALUE; cvar; external RUBY_LIB;
  rb_eTypeError        : VALUE; cvar; external RUBY_LIB;
  rb_eZeroDivError     : VALUE; cvar; external RUBY_LIB;
  rb_mComparable       : VALUE; cvar; external RUBY_LIB;
  rb_mEnumerable       : VALUE; cvar; external RUBY_LIB;
  rb_mErrno            : VALUE; cvar; external RUBY_LIB;
  rb_mFileTest         : VALUE; cvar; external RUBY_LIB;
  rb_mGC               : VALUE; cvar; external RUBY_LIB;
  rb_mKernel           : VALUE; cvar; external RUBY_LIB;
  rb_mMath             : VALUE; cvar; external RUBY_LIB;
  rb_mProcess          : VALUE; cvar; external RUBY_LIB;
  rb_mRubyVMFrozenCore : VALUE; cvar; external RUBY_LIB;
  rb_mWaitReadable     : VALUE; cvar; external RUBY_LIB;
  rb_mWaitWritable     : VALUE; cvar; external RUBY_LIB;
  rb_argv0 : VALUE; cvar; external RUBY_LIB;
  rb_default_rs : VALUE; cvar; external RUBY_LIB;
  rb_fs : VALUE; cvar; external RUBY_LIB;
  rb_output_fs : VALUE; cvar; external RUBY_LIB;
  rb_output_rs : VALUE; cvar; external RUBY_LIB;
  rb_rs : VALUE; cvar; external RUBY_LIB;
  rb_stderr : VALUE platform; cvar; external RUBY_LIB;
  rb_stdin  : VALUE platform; cvar; external RUBY_LIB;
  rb_stdout : VALUE platform; cvar; external RUBY_LIB;
  ruby_api_version : array [0..2] of cint; cvar; external RUBY_LIB;
  ruby_copyright    : Char platform; cvar; external RUBY_LIB;
  ruby_description  : Char platform; cvar; external RUBY_LIB;
  ruby_engine       : Char platform; cvar; external RUBY_LIB;
  ruby_patchlevel : cint; cvar; external RUBY_LIB;
  ruby_platform     : Char platform; cvar; external RUBY_LIB;
  ruby_release_date : Char platform; cvar; external RUBY_LIB;
  ruby_version      : Char platform; cvar; external RUBY_LIB;

const
  p_ruby_copyright    : PChar = @ruby_copyright;
  p_ruby_description  : PChar = @ruby_description;
  p_ruby_engine       : PChar = @ruby_engine;
  p_ruby_platform     : PChar = @ruby_platform;
  p_ruby_release_date : PChar = @ruby_release_date;
  p_ruby_version      : PChar = @ruby_version;

  p_stderr : PVALUE = @rb_stderr;
  p_stdin  : PVALUE = @rb_stdin;
  p_stdout : PVALUE = @rb_stdout;

procedure rb_add_event_hook (func : rb_event_hook_func_t;
               evets : rb_event_flag_t; data : VALUE); cdecl; external RUBY_LIB;
procedure rb_alias (klass : VALUE; name, def : ID); cdecl; external RUBY_LIB;
procedure rb_alias_variable (name1, name2 : ID); cdecl; external RUBY_LIB;
function rb_alloc_tmp_buffer (store : PVALUE; len : clong) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_any_to_s (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_apply (recv : VALUE; mid : ID; args : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_Array (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_aref (argc : cint; argv : PVALUE; ary : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_ary_assoc (ary, key : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_clear (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_cmp (ary1, ary2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_concat (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_delete (ary, item : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_delete_at (ary : VALUE; pos : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_ary_dup (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_each (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_entry (ary : VALUE; offset : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_ary_free (ary : VALUE); cdecl; external RUBY_LIB;
function rb_ary_freeze (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_includes (ary, item : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_join (ary, sep : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_memsize (ary : VALUE) : csize_t; cdecl; external RUBY_LIB;
procedure rb_ary_modify (ary : VALUE); cdecl; external RUBY_LIB;
function rb_ary_new () : VALUE; cdecl; external RUBY_LIB;
function rb_ary_new2 (capa : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_new3 (n : clong) : VALUE; varargs; cdecl; external RUBY_LIB;
function rb_ary_new4 (n : clong; elts : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_ary_plus (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_pop (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_push (ary, item : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_rassoc (ary, value : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_replace (copy, orig : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_resize (ary : VALUE; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_ary_resurrect (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_reverse (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_shift (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_sort (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_sort_bang (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_ary_store (ary : VALUE; idx : clong; val : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_ary_subseq (ary : VALUE; beg, len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_ary_tmp_new (capa : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_to_ary (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_to_s (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ary_unshift (ary, item : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_ascii8bit_encindex () : cint; cdecl; external RUBY_LIB;
function rb_ascii8bit_encoding () : Pointer; cdecl; external RUBY_LIB;
function rb_assoc_new (car, cdr : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_attr (klass : VALUE; id : ID; read, write, ex : cint); cdecl;
                                                              external RUBY_LIB;
function rb_attr_get (obj : VALUE; id : ID) : VALUE; cdecl; external RUBY_LIB;
procedure rb_autoload (_mod : VALUE; id : ID; _file : PChar); cdecl;
                                                              external RUBY_LIB;
function rb_autoload_load (_mod : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_autoload_p (_mod : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_backref_get () : VALUE; cdecl; external RUBY_LIB;
procedure rb_backref_set (val : VALUE); cdecl; external RUBY_LIB;
procedure rb_backtrace (); cdecl; external RUBY_LIB;
procedure rb_big_2comp (x : VALUE); cdecl; external RUBY_LIB;
function rb_big2dbl (x : VALUE) : cdouble; cdecl; external RUBY_LIB;
function rb_big2ll (x : VALUE) : clonglong; cdecl; external RUBY_LIB;
function rb_big2long (x : VALUE) : PtrInt; cdecl; external RUBY_LIB;
function rb_big2str (x : VALUE; base : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_big2str0 (x : VALUE; base, trim : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_big2ull (x : VALUE) : culonglong; cdecl; external RUBY_LIB;
function rb_big2ulong (x : VALUE) : PtrUInt; cdecl; external RUBY_LIB;
function rb_big2ulong_pack (x : VALUE) : PtrUInt; cdecl; external RUBY_LIB;
function rb_big_and (xx, yy : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_clone (x : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_cmp (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_div (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_divmod (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_eq (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_eql (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_idiv (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_lshift (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_minus (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_modulo (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_mul (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_new (len : clong; sign : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_big_norm (x : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_or (xx, yy : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_big_pack (val : VALUE; buf : pculong; num_longs : culong); cdecl;
                                                              external RUBY_LIB;
function rb_big_plus (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_pow (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_big_resize (big : VALUE; len : clong); cdecl; external RUBY_LIB;
function rb_big_rshift (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_big_unpack (buf : pculong; num_longs : culong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_big_xor (xx, yy : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_bigzero_p (x : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_binding_new () : VALUE; cdecl; external RUBY_LIB;
function rb_block_call (obj : VALUE; mid : ID; argc : cint; argv : PVALUE;
            bl_proc : Pointer; data2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_block_given_p () : cint; cdecl; external RUBY_LIB;
function rb_block_lambda () : VALUE; cdecl; external RUBY_LIB;
function rb_block_proc () : VALUE; cdecl; external RUBY_LIB;
procedure rb_bug (fmt : PChar); varargs; cdecl; external RUBY_LIB;
procedure rb_bug_errno (mesg : PChar; errno_arg : cint); cdecl;
                                                              external RUBY_LIB;
function rb_call_super (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_catch (tag : PChar; func : p_catch_func; data : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_catch_obj (tag : VALUE; func : p_catch_func; data : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_char_to_option_kcode (c : cint; option, kcode : pcint) : cint;
                                                       cdecl; external RUBY_LIB;
function rb_check_array_type (ary : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_check_convert_type (val : VALUE; _type : cint;
                       tname, method : PChar) : VALUE; cdecl; external RUBY_LIB;
procedure rb_check_frozen (obj : VALUE); cdecl; external RUBY_LIB;
function rb_check_funcall (recv : VALUE; mid : ID;
                  argc : cint; argv : PVALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_check_hash_type (hash : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_check_inheritable (super : VALUE); cdecl; external RUBY_LIB;
procedure rb_check_safe_obj (x : VALUE); cdecl; external RUBY_LIB;
procedure rb_check_safe_str (x : VALUE); cdecl; external RUBY_LIB;
function rb_check_string_type (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_check_to_float (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_check_to_integer (val : VALUE; method : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_check_type (x : VALUE; t : ruby_value_type); cdecl;
                                                              external RUBY_LIB;
function rb_check_typeddata (obj : VALUE; data_type : Pointer) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_class2name (klass : VALUE) : PChar; cdecl; external RUBY_LIB;
function rb_class_boot (super : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_get_superclass (klass : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_class_inherited (super, klass : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_class_inherited_p (_mod, arg : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_class_instance_methods (argc : cint; argv : PVALUE;
                                _mod : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_name (klass : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_new (super : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_new_instance (argc : cint; argv : PVALUE;
                               klass : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_path (klass : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_private_instance_methods (argc : cint; argv : PVALUE;
                                _mod : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_protected_instance_methods (argc : cint; argv : PVALUE;
                                _mod : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_public_instance_methods (argc : cint; argv : PVALUE;
                                _mod : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_real (cl : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_class_superclass (klass : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_clear_cache (); cdecl; external RUBY_LIB;
procedure rb_clear_cache_by_class (klass : VALUE); cdecl; external RUBY_LIB;
procedure rb_close_before_exec (lowfd, maxhint : cint; noclose_fds : VALUE);
                                                       cdecl; external RUBY_LIB;
procedure rb_cmperr (x, y : VALUE); cdecl; external RUBY_LIB;
function rb_cmpint (val, a, b : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_compile_cstr (f, s : PChar; len, line : cint) : Pointer; cdecl;
                                                              external RUBY_LIB;
procedure rb_compile_error (_file : PChar; line : cint; fmt : PChar); varargs;
                                                       cdecl; external RUBY_LIB;
procedure rb_compile_error_append (fmt : PChar); varargs; cdecl;
                                                              external RUBY_LIB;
procedure rb_compile_error_with_enc (_file : PChar; line : cint;
                 enc : Pointer; fmt : PChar); varargs; cdecl; external RUBY_LIB;
function rb_compile_file (f : PChar; _file : VALUE; start : cint) : Pointer;
                                                       cdecl; external RUBY_LIB;
function rb_compile_string (f : PChar; s : VALUE; line : cint) : Pointer; cdecl;
                                                              external RUBY_LIB;
procedure rb_compile_warn (_file : PChar; line : cint; fmt : PChar); varargs;
                                                       cdecl; external RUBY_LIB;
procedure rb_compile_warning (_file : PChar; line : cint; fmt : PChar); varargs;
                                                       cdecl; external RUBY_LIB;
function rb_Complex (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_complex_new (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_complex_polar (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_complex_raw (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_const_defined (klass : VALUE; id : ID) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_const_defined_at (klass : VALUE; id : ID) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_const_defined_from (klass : VALUE; id : ID) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_const_get (klass : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_const_get_at (klass : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_const_get_from (klass : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_const_list (data : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_const_remove (_mod : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_const_set (klass : VALUE; id : ID; val : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_convert_type (val : VALUE; _type : cint;
                       tname, method : PChar) : VALUE; cdecl; external RUBY_LIB;
procedure rb_copy_generic_ivar (clone, obj : VALUE); cdecl; external RUBY_LIB;
function rb_cstr2inum (str : PChar; base : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_cstr_to_dbl (p : PChar; badcheck : cint) : cdouble; cdecl;
                                                              external RUBY_LIB;
function rb_cstr_to_inum (str : PChar; base, badcheck : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_cvar_defined (klass : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_cvar_get (klass : VALUE; id : ID) : VALUE; cdecl; external RUBY_LIB;
procedure rb_cvar_set (klass : VALUE; id : ID; val : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_cv_get (klass : VALUE; name : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_cv_set (klass : VALUE; name : PChar; val : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_data_object_alloc (klass : VALUE; datap : Pointer;
               dmark, dfree : RUBY_DATA_FUNC) : VALUE; cdecl; external RUBY_LIB;
function rb_data_typed_object_alloc (klass : VALUE; datap : Pointer;
                             _type : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_dbl2big (d : cdouble) : VALUE; cdecl; external RUBY_LIB;
function rb_dbl_cmp (a, b : cdouble) : VALUE; cdecl; external RUBY_LIB;
procedure rb_declare_transcoder (enc1, enc2, lib : PChar); cdecl;
                                                              external RUBY_LIB;
function rb_default_external_encoding () : Pointer; cdecl; external RUBY_LIB;
function rb_default_internal_encoding () : Pointer; cdecl; external RUBY_LIB;
procedure rb_define_alias (klass : VALUE; name1, name2 : PChar); cdecl;
                                                              external RUBY_LIB;
procedure rb_define_alloc_func (klass : VALUE; func : p_func); cdecl;
                                                              external RUBY_LIB;
procedure rb_define_attr (klass : VALUE; name : PChar; read, write : cint);
                                                       cdecl; external RUBY_LIB;
function rb_define_class (name : PChar; super : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_define_class_id (id : ID; super : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_define_class_id_under (outer : VALUE;
                      id : ID; super : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_define_class_under (outer : VALUE;
                 name : PChar; super : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_define_class_variable (klass : VALUE; name : PChar; val : VALUE);
                                                       cdecl; external RUBY_LIB;
procedure rb_define_const (klass : VALUE; name : PChar; val : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_define_dummy_encoding (name : PChar) : cint; cdecl;
                                                              external RUBY_LIB;
procedure rb_define_global_const (name : PChar; val : VALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_define_global_function (name : PChar; func : Pointer; argc : cint);
                                                       cdecl; external RUBY_LIB;
procedure rb_define_hooked_variable (name : PChar; data : PVALUE;
                   getter : rb_gvar_getter_t; setter : rb_gvar_setter_t); cdecl;
                                                              external RUBY_LIB;
procedure rb_define_method (klass : VALUE; name : PChar;
                         func : Pointer; argc : cint); cdecl; external RUBY_LIB;
procedure rb_define_method_id (klass : VALUE; mid : ID;
                         func : Pointer; argc : cint); cdecl; external RUBY_LIB;
function rb_define_module (name : PChar) : VALUE; cdecl; external RUBY_LIB;
procedure rb_define_module_function (_module : VALUE; name : PChar;
                         func : Pointer; argc : cint); cdecl; external RUBY_LIB;
function rb_define_module_id (id : ID) : VALUE; cdecl; external RUBY_LIB;
function rb_define_module_id_under (outer : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_define_module_under (outer : VALUE; name : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_define_private_method (klass : VALUE; name : PChar;
                         func : Pointer; argc : cint); cdecl; external RUBY_LIB;
procedure rb_define_protected_method (klass : VALUE; name : PChar;
                         func : Pointer; argc : cint); cdecl; external RUBY_LIB;
procedure rb_define_readonly_variable (name : PChar; _var : PVALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_define_singleton_method (obj : VALUE; name : PChar;
                         func : Pointer; argc : cint); cdecl; external RUBY_LIB;
procedure rb_define_variable (name : PChar; _var : PVALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_define_virtual_variable (name : PChar;
                   getter : rb_gvar_getter_t; setter : rb_gvar_setter_t); cdecl;
                                                              external RUBY_LIB;
function rb_detach_process (pid : PtrUInt) : VALUE; cdecl; external RUBY_LIB;
function rb_dir_getwd () : VALUE; cdecl; external RUBY_LIB;
function rb_during_gc () : cint; cdecl; external RUBY_LIB;
function rb_each (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_econv_asciicompat_encoding (ascii_incompat_name : PChar) : PChar;
                                                       cdecl; external RUBY_LIB;
procedure rb_econv_binmode (ec : Pointer); cdecl; external RUBY_LIB;
procedure rb_econv_check_error (ec : Pointer); cdecl; external RUBY_LIB;
procedure rb_econv_close (ec : Pointer); cdecl; external RUBY_LIB;
function rb_econv_convert (ec : Pointer; input_ptr : PPChar; input_stop : PChar;
    output_ptr : PPChar; output_stop : PChar; flags : cint) : rb_econv_result_t;
                                                       cdecl; external RUBY_LIB;
function rb_econv_decorate_at_first (ec : Pointer;
                       decorator_name : PChar) : cint; cdecl; external RUBY_LIB;
function rb_econv_decorate_at_last (ec : Pointer;
                       decorator_name : PChar) : cint; cdecl; external RUBY_LIB;
function rb_econv_encoding_to_insert_output (ec : Pointer) : PChar; cdecl;
                                                              external RUBY_LIB;
function rb_econv_has_convpath_p (from_encoding, to_encoding : PChar) : cint;
                                                       cdecl; external RUBY_LIB;
function rb_econv_insert_output (ec : Pointer; str : PChar; len : csize_t;
                         str_encoding : PChar) : cint; cdecl; external RUBY_LIB;
function rb_econv_make_exception (ec : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_econv_open (sname, dname : PChar; ecflags : cint) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_econv_open_exc (sname, dname : PChar; ecflags : cint) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_econv_open_opts (source_encoding, destination_encoding : PChar;
           ecflags : cint; opthash : VALUE) : Pointer; cdecl; external RUBY_LIB;
function rb_econv_prepare_options (opthash : VALUE; opts : PVALUE;
                               ecflags : cint) : cint; cdecl; external RUBY_LIB;
function rb_econv_prepare_opts (opthash : VALUE; opts : PVALUE) : cint; cdecl;
                                                              external RUBY_LIB;
procedure rb_econv_putback (ec : Pointer; p : PChar; n : cint); cdecl;
                                                              external RUBY_LIB;
function rb_econv_putbackable (ec : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_econv_set_replacement (ec : Pointer; str : PChar; len : csize_t;
                              encname : PChar) : cint; cdecl; external RUBY_LIB;
function rb_econv_str_append (ec : Pointer; src, dst : VALUE;
                                flags : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_econv_str_convert (ec : Pointer; src : VALUE; flags : cint) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_econv_substr_append (ec : Pointer; src : VALUE; off, len : clong;
                   dst : VALUE; flags : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_econv_substr_convert (ec : Pointer; src : VALUE;
     byteoff, bytesize : clong; flags : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_enc_ascget (p, e : PChar; len : pcint; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_associate (obj : VALUE; enc : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_enc_associate_index (obj : VALUE; idx : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_enc_check (str1, str2 : VALUE) : Pointer; cdecl; external RUBY_LIB;
function rb_enc_codelen (c : cint; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_codepoint (p, e : PChar; enc : Pointer) : cuint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_codepoint_len (p, e : PChar; len_p : pcint;
                               enc : Pointer) : cuint; cdecl; external RUBY_LIB;
function rb_enc_compatible (str1, str2 : VALUE) : Pointer; cdecl;
                                                              external RUBY_LIB;
procedure rb_enc_copy (obj1, obj2 : VALUE); cdecl; external RUBY_LIB;
function rb_encdb_alias (_alias, orig : PChar) : cint; cdecl; external RUBY_LIB;
procedure rb_encdb_declare (name : PChar); cdecl; external RUBY_LIB;
function rb_encdb_dummy (name : PChar) : cint; cdecl; external RUBY_LIB;
function rb_encdb_replicate (name, orig : PChar) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_default_external () : VALUE; cdecl; external RUBY_LIB;
function rb_enc_default_internal () : VALUE; cdecl; external RUBY_LIB;
function rb_enc_fast_mbclen (p, e : PChar; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_find (name : PChar) : Pointer; cdecl; external RUBY_LIB;
function rb_enc_find_index (name : PChar) : cint; cdecl; external RUBY_LIB;
function rb_enc_from_encoding (encoding : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_enc_from_index (_index : cint) : Pointer; cdecl; external RUBY_LIB;
function rb_enc_get (obj : VALUE) : Pointer; cdecl; external RUBY_LIB;
function rb_enc_get_index (obj : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_enc_mbclen (p, e : PChar; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_nth (p, e : PChar; nth : clong; enc : Pointer) : PChar; cdecl;
                                                              external RUBY_LIB;
function rb_enc_path_end (path, _end : PChar; enc : Pointer) : PChar; cdecl;
                                                              external RUBY_LIB;
function rb_enc_path_last_separator (path, _end : PChar; enc : Pointer) : PChar;
                                                       cdecl; external RUBY_LIB;
function rb_enc_path_next (s, e : PChar; enc : Pointer) : PChar; cdecl;
                                                              external RUBY_LIB;
function rb_enc_path_skip_prefix (path, _end : PChar; enc : Pointer) : PChar;
                                                       cdecl; external RUBY_LIB;
function rb_enc_precise_mbclen (p, e : PChar; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_register (name : PChar; encoding : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_reg_new (s : PChar; len : clong; enc : Pointer;
                              options : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_enc_replicate (name : PChar; encoding : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
procedure rb_enc_set_base (name, orig : PChar); cdecl; external RUBY_LIB;
procedure rb_enc_set_default_external (encoding : VALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_enc_set_default_internal (encoding : VALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_enc_set_index (obj : VALUE; idx : cint); cdecl; external RUBY_LIB;
function rb_enc_sprintf (enc : Pointer; format : PChar) : VALUE; varargs; cdecl;
                                                              external RUBY_LIB;
function rb_enc_str_asciionly_p (str : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_enc_str_buf_cat (str : VALUE;
 ptr : PChar; len : clong; ptr_enc : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_enc_str_coderange (str : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_enc_strlen (p, e : PChar; enc : Pointer) : clong; cdecl;
                                                              external RUBY_LIB;
function rb_enc_str_new (ptr : PChar; len : clong; enc : Pointer) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_enc_symname2_p (name : PChar; len : clong; enc : Pointer) : cint;
                                                       cdecl; external RUBY_LIB;
function rb_enc_symname_p (name : PChar; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_tolower (c : cint; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_toupper (c : cint; enc : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_enc_uint_chr (code : cuint; enc : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_enc_unicode_p (enc : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_ensure (b_proc : p_func; data1 : VALUE;
              e_proc : p_func; data2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_enumeratorize (obj, meth : VALUE;
                  argc : cint; argv : PVALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_env_clear () : VALUE; cdecl; external RUBY_LIB;
function rb_env_path_tainted () : cint; cdecl; external RUBY_LIB;
procedure rb_eof_error (); cdecl; external RUBY_LIB;
function rb_eql (obj1, obj2 : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_equal (obj1, obj2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_errinfo () : VALUE; cdecl; external RUBY_LIB;
procedure rb_error_frozen (what : PChar); cdecl; external RUBY_LIB;
function rb_eval_cmd (cmd, arg : VALUE; level : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_eval_string (str : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_eval_string_protect (str : PChar; state : pcint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_eval_string_wrap (str : PChar; state : pcint) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_exc_fatal (mesg : VALUE); cdecl; external RUBY_LIB;
function rb_exc_new (etype : VALUE; ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_exc_new2 (etype : VALUE; s : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_exc_new3 (etype, str : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_exc_raise (mesg : VALUE); cdecl; external RUBY_LIB;
function rb_exec (e : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_exec_arg_addopt (e : Pointer; key, val : VALUE) : cint; cdecl;
                                                              external RUBY_LIB;
procedure rb_exec_arg_fixup (e : Pointer); cdecl; external RUBY_LIB;
function rb_exec_arg_init (argc : cint; argv : PVALUE; accept_shell : cint;
                                 e : Pointer) : VALUE; cdecl; external RUBY_LIB;
procedure rb_exec_end_proc (); cdecl; external RUBY_LIB;
function rb_exec_err (e : Pointer;
      errmsg : PChar; errmsg_buflen : csize_t) : cint; cdecl; external RUBY_LIB;
function rb_exec_recursive (func : p_recursive_func; obj, arg : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_exec_recursive_outer (func : p_recursive_func;
                            obj, arg : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_exec_recursive_paired (func : p_recursive_func;
                obj, paired_obj, arg : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_exit (status : cint); cdecl; external RUBY_LIB;
procedure rb_extend_object (obj, _module : VALUE); cdecl; external RUBY_LIB;
function rb_external_str_new (ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_external_str_new_cstr (ptr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_external_str_new_with_enc (ptr : PChar; len : clong;
                              eenc : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_f_abort (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_fatal (fmt : PChar); varargs; cdecl; external RUBY_LIB;
procedure rb_fd_clr (n : cint; fds : Pointer); cdecl; external RUBY_LIB;
procedure rb_fd_copy (dst, src : Pointer; max : cint); cdecl; external RUBY_LIB;
procedure rb_fd_dup (dst, src : Pointer); cdecl; external RUBY_LIB;
procedure rb_fd_init (_set : Pointer); cdecl; external RUBY_LIB;
function rb_fd_isset (n : cint; fds : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_fdopen (fd : cint; modestr : PChar) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_fd_select (n : cint; readfds, writefds, exceptfds : Pointer;
                           timeout : ptimeval) : cint; cdecl; external RUBY_LIB;
procedure rb_fd_set (fd : cint; _set : Pointer); cdecl; external RUBY_LIB;
procedure rb_fd_term (_set : Pointer); cdecl; external RUBY_LIB;
procedure rb_fd_zero (fds : Pointer); cdecl; external RUBY_LIB;
function rb_feature_provided (feature : PChar; loading : PPChar) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_f_exec (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_f_exit (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_f_global_variables () : VALUE; cdecl; external RUBY_LIB;
function rb_fiber_alive_p (fibval : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_fiber_current () : VALUE; cdecl; external RUBY_LIB;
function rb_fiber_new (func : Pointer; obj : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_fiber_resume (fibval : VALUE; argc : cint; argv : PVALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_fiber_yield (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_file_absolute_path (fname, dname : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_file_directory_p (obj, fname : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_file_dirname (fname : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_file_expand_path (fname, dname : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_file_open (fname, modestr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_file_open_str (fname : VALUE; modestr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_file_s_absolute_path (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_file_s_expand_path (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_filesystem_encindex () : cint; cdecl; external RUBY_LIB;
function rb_filesystem_encoding () : Pointer; cdecl; external RUBY_LIB;
function rb_filesystem_str_new (ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_filesystem_str_new_cstr (ptr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_find_file (path : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_find_file_ext (filep : PVALUE; ext : PPChar) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_find_file_ext_safe (filep : PVALUE; ext : PPChar;
                             safelevel : cint) : cint; cdecl; external RUBY_LIB;
function rb_find_file_safe (path : VALUE; safelevel : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_fix2int (val : VALUE) : clong; cdecl; external RUBY_LIB;
function rb_fix2str (x : VALUE; base : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_fix2uint (val : VALUE) : culong; cdecl; external RUBY_LIB;
function rb_f_kill (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_Float (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_f_notimplement (argc : cint; argv : PVALUE; obj : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_fork (status : pcint; chfunc : p_chfunc; charg : Pointer;
                               fds : VALUE) : PtrUInt; cdecl; external RUBY_LIB;
function rb_fork_err (status : pcint; chfunc : p_chfunc_msg; charg : Pointer;
                fds : VALUE; errmsg : PChar; errmsg_buflen : csize_t) : PtrUInt;
                                                       cdecl; external RUBY_LIB;
function rb_frame_callee () : ID; cdecl; external RUBY_LIB;
function rb_frame_method_id_and_class (idp : PID; klassp : PVALUE) : cint;
                                                       cdecl; external RUBY_LIB;
procedure rb_frame_pop (); cdecl; external RUBY_LIB;
function rb_frame_this_func () : ID; cdecl; external RUBY_LIB;
procedure rb_free_generic_ivar (obj : VALUE); cdecl; external RUBY_LIB;
procedure rb_free_tmp_buffer (store : PVALUE); cdecl; external RUBY_LIB;
function rb_f_require (obj, fname : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_frozen_class_p (klass : VALUE); cdecl; external RUBY_LIB;
function rb_f_sprintf (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_f_trace_var (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_funcall (recv : VALUE; mid : ID; n : cint) : VALUE; varargs; cdecl;
                                                              external RUBY_LIB;
function rb_funcall2 (recv : VALUE; mid : ID;
                  argc : cint; argv : PVALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_funcall3 (recv : VALUE; mid : ID;
                  argc : cint; argv : PVALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_funcall_passing_block (recv : VALUE; mid : ID;
                  argc : cint; argv : PVALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_f_untrace_var (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_gc (); cdecl; external RUBY_LIB;
procedure rb_gc_call_finalizer_at_exit (); cdecl; external RUBY_LIB;
procedure rb_gc_copy_finalizer (dest, obj : VALUE); cdecl; external RUBY_LIB;
function rb_gc_disable () : VALUE; cdecl; external RUBY_LIB;
function rb_gc_enable () : VALUE; cdecl; external RUBY_LIB;
procedure rb_gc_finalize_deferred (); cdecl; external RUBY_LIB;
procedure rb_gc_force_recycle (p : VALUE); cdecl; external RUBY_LIB;
procedure rb_gc_mark (ptr : VALUE); cdecl; external RUBY_LIB;
procedure rb_gc_mark_global_tbl (); cdecl; external RUBY_LIB;
procedure rb_gc_mark_locations (start, _end : PVALUE); cdecl; external RUBY_LIB;
procedure rb_gc_mark_maybe (obj : VALUE); cdecl; external RUBY_LIB;
procedure rb_gc_register_address (addr : PVALUE); cdecl; external RUBY_LIB;
procedure rb_gc_register_mark_object (obj : VALUE); cdecl; external RUBY_LIB;
procedure rb_gc_set_params (); cdecl; external RUBY_LIB;
function rb_gc_start () : VALUE; cdecl; external RUBY_LIB;
procedure rb_gc_unregister_address (addr : PVALUE); cdecl; external RUBY_LIB;
function rb_generic_ivar_memsize (obj : VALUE) : csize_t; cdecl;
                                                              external RUBY_LIB;
function rb_generic_ivar_table (obj : VALUE) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_genrand_int32 () : cuint; cdecl; external RUBY_LIB;
function rb_genrand_real () : cdouble; cdecl; external RUBY_LIB;
function rb_genrand_ulong_limited (limit : culong) : culong; cdecl;
                                                              external RUBY_LIB;
function rb_get_alloc_func (klass : VALUE) : rb_alloc_func_t; cdecl;
                                                              external RUBY_LIB;
function rb_get_argv () : VALUE; cdecl; external RUBY_LIB;
function rb_get_coverages () : VALUE; cdecl; external RUBY_LIB;
function rb_get_path (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_get_path_no_checksafe (obj : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_gets () : VALUE; cdecl; external RUBY_LIB;
function rb_get_values_at (obj : VALUE; olen : clong;
                      argc : cint; argv : PVALUE; func : p_objlen_func) : VALUE;
                                                       cdecl; external RUBY_LIB;
procedure rb_glob (path : PChar; func : p_glob_func; arg : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_global_entry (id : ID) : Pointer; cdecl; external RUBY_LIB;
procedure rb_global_variable (_var : PVALUE); cdecl; external RUBY_LIB;
function rb_gvar_defined (entry : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_gvar_get (entry : Pointer) : VALUE; cdecl; external RUBY_LIB;
procedure rb_gvar_readonly_setter (val : VALUE; id : ID; data, gvar : Pointer);
                                                       cdecl; external RUBY_LIB;
function rb_gvar_set (entry : Pointer; val : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_gvar_undef_getter (id : ID; data, _var : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_gvar_undef_marker (_var : Pointer); cdecl; external RUBY_LIB;
procedure rb_gvar_undef_setter (val : VALUE; id : ID; data, _var : Pointer);
                                                       cdecl; external RUBY_LIB;
function rb_gvar_val_getter (id : ID; data, _var : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_gvar_val_marker (_var : PVALUE); cdecl; external RUBY_LIB;
procedure rb_gvar_val_setter (val : VALUE; id : ID; data, _var : Pointer);
                                                       cdecl; external RUBY_LIB;
function rb_gvar_var_getter (id : ID; data, gvar : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_gvar_var_marker (_var : PVALUE); cdecl; external RUBY_LIB;
procedure rb_gvar_var_setter (val : VALUE; id : ID; data, gvar : Pointer);
                                                       cdecl; external RUBY_LIB;
function rb_gv_get (name : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_gv_set (name : PChar; val : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_hash (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_hash_aref (hash, key : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_hash_aset (hash, key, val : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_hash_delete (hash, key : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_hash_delete_if (hash : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_hash_dup (hash : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_hash_fetch (hash, key : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_hash_foreach (hash : VALUE; func : rb_foreach_func; farg : VALUE);
                                                       cdecl; external RUBY_LIB;
function rb_hash_freeze (hash : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_hash_lookup (hash, key : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_hash_lookup2 (hash, key, def : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_hash_new () : VALUE; cdecl; external RUBY_LIB;
function rb_hash_start (h : st_index_t) : st_index_t; cdecl; external RUBY_LIB;
function rb_hash_tbl (hash : VALUE) : Pointer; cdecl; external RUBY_LIB;
function rb_hash_update_by (hash1, hash2 : VALUE;
                  func : rb_hash_update_func) : VALUE; cdecl; external RUBY_LIB;
function rb_id2name (id : ID) : PChar; cdecl; external RUBY_LIB;
function rb_id2str (id : ID) : VALUE; cdecl; external RUBY_LIB;
function rb_id_attrset (id : ID) : ID; cdecl; external RUBY_LIB;
procedure rb_include_module (klass, module : VALUE); cdecl; external RUBY_LIB;
procedure rb_insecure_operation (); cdecl; external RUBY_LIB;
function rb_inspect (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_int2big (n : PtrInt) : VALUE; cdecl; external RUBY_LIB;
function rb_int2inum (n : PtrInt) : VALUE; cdecl; external RUBY_LIB;
function rb_Integer (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_intern (name : PChar) : ID; cdecl; external RUBY_LIB;
function rb_intern2 (name : PChar; len : clong) : ID; cdecl; external RUBY_LIB;
function rb_intern3 (name : PChar; len : clong; enc : Pointer) : ID; cdecl;
                                                              external RUBY_LIB;
function rb_intern_str (str : VALUE) : ID; cdecl; external RUBY_LIB;
procedure rb_interrupt (); cdecl; external RUBY_LIB;
procedure rb_invalid_str (str, _type : PChar); cdecl; external RUBY_LIB;
function rb_io_addstr (io, str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_ascii8bit_binmode (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_binmode (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_bufwrite (io : VALUE; buf : Pointer; size : csize_t) : csize_t;
                                                       cdecl; external RUBY_LIB;
procedure rb_io_check_byte_readable (fptr : Pointer); cdecl; external RUBY_LIB;
procedure rb_io_check_char_readable (fptr : Pointer); cdecl; external RUBY_LIB;
procedure rb_io_check_closed (fptr : Pointer); cdecl; external RUBY_LIB;
procedure rb_io_check_initialized (fptr : Pointer); cdecl; external RUBY_LIB;
procedure rb_io_check_readable (fptr : Pointer); cdecl; external RUBY_LIB;
procedure rb_io_check_writable (fptr : Pointer); cdecl; external RUBY_LIB;
function rb_io_close (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_eof (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_extract_encoding_option (opt : VALUE; enc_p, enc2_p : PPointer;
                              fmode_p : pcint) : cint; cdecl; external RUBY_LIB;
function rb_io_fdopen (fd, oflags : cint; path : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_io_flush (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_fptr_finalize (fptr : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_io_getbyte (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_get_io (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_gets (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_get_write_io (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_memsize (fptr : Pointer) : csize_t; cdecl; external RUBY_LIB;
function rb_io_modestr_fmode (modestr : PChar) : cint; cdecl; external RUBY_LIB;
function rb_io_modestr_oflags (modestr : PChar) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_io_oflags_fmode (oflags : cint) : cint; cdecl; external RUBY_LIB;
function rb_io_print (argc : cint; argv : PVALUE; _out : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_io_printf (argc : cint; argv : PVALUE; _out : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_io_puts (argc : cint; argv : PVALUE; _out : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_io_read_check (fptr : Pointer); cdecl; external RUBY_LIB;
function rb_io_read_pending (fptr : Pointer) : cint; cdecl; external RUBY_LIB;
procedure rb_io_set_nonblock (fptr : Pointer); cdecl; external RUBY_LIB;
function rb_io_set_write_io (io, w : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_stdio_file (fptr : Pointer) : Pointer; cdecl; external RUBY_LIB;
procedure rb_io_synchronized (fptr : Pointer); cdecl; external RUBY_LIB;
function rb_io_taint_check (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_ungetbyte (io, b : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_ungetc (io, c : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_io_wait_readable (f : cint) : cint; cdecl; external RUBY_LIB;
function rb_io_wait_writable (f : cint) : cint; cdecl; external RUBY_LIB;
function rb_io_write (io, str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_is_absolute_path (path : PChar) : cint; cdecl; external RUBY_LIB;
function rb_isalnum (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_isalpha (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_isblank (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_is_class_id (id : ID) : cint; cdecl; external RUBY_LIB;
function rb_iscntrl (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_is_const_id (id : ID) : cint; cdecl; external RUBY_LIB;
function rb_isdigit (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_iseq_build_from_ary (iseq : Pointer;
       locals, args, exception, body : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_compile (src, _file, line : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_iseq_compile_node (_self : VALUE; node : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_iseq_compile_with_option (
     src, _file, filepath, line, opt : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_disasm (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_disasm_insn (ret : VALUE; iseq : PVALUE; pos : csize_t;
             iseqdat : Pointer; child : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_iseq_eval (iseqval : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_eval_main (iseqval : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_first_lineno (iseq : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_iseq_load (data, parent, opt : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_iseq_new (node : Pointer; name, filename, filepath, parent : VALUE;
                           _type : iseq_type) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_new_main (node : Pointer; filename, filepath : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_iseq_new_top (node : Pointer;
    name, filename, filepath, parent : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_new_with_bopt (node : Pointer;
           name, filename, filepath, line_no, parent : VALUE; _type : iseq_type;
                                bopt : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_new_with_opt (node : Pointer;
           name, filename, filepath, line_no, parent : VALUE; _type : iseq_type;
                            option : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_parameters (iseq : Pointer; is_proc : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_iseq_translate_threaded_code (iseq : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_isgraph (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_is_instance_id (id : ID) : cint; cdecl; external RUBY_LIB;
function rb_is_junk_id (id : ID) : cint; cdecl; external RUBY_LIB;
function rb_is_local_id (id : ID) : cint; cdecl; external RUBY_LIB;
function rb_islower (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_isprint (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_ispunct (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_isspace (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_isupper (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_isxdigit (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_iterate (it_proc : p_func; data1 : VALUE;
            bl_proc : Pointer; data2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_iter_break (); cdecl; external RUBY_LIB;
function rb_ivar_count (obj : VALUE) : st_index_t; cdecl; external RUBY_LIB;
function rb_ivar_defined (obj : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_ivar_foreach (obj : VALUE; func : Pointer; arg : st_index_t);
                                                       cdecl; external RUBY_LIB;
function rb_ivar_get (obj : VALUE; id : ID) : VALUE; cdecl; external RUBY_LIB;
function rb_ivar_set (obj : VALUE; id : ID; val : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_iv_get (obj : VALUE; name : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_iv_set (obj : VALUE; name : PChar; val : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_jump_tag (tag : cint); cdecl; external RUBY_LIB;
function rb_lastline_get () : VALUE; cdecl; external RUBY_LIB;
procedure rb_lastline_set (val : VALUE); cdecl; external RUBY_LIB;
function rb_last_status_get () : VALUE; cdecl; external RUBY_LIB;
procedure rb_last_status_set (status : cint; pid : PtrUInt); cdecl;
                                                              external RUBY_LIB;
function rb_ll2inum (n : clonglong) : VALUE; cdecl; external RUBY_LIB;
procedure rb_load (fname : VALUE; wrap : cint); cdecl; external RUBY_LIB;
procedure rb_loaderror (fmt : PChar); varargs; cdecl; external RUBY_LIB;
function rb_load_file (fname : PChar) : Pointer; cdecl; external RUBY_LIB;
procedure rb_load_protect (fname : VALUE; wrap : cint; state : pcint); cdecl;
                                                              external RUBY_LIB;
function rb_locale_charmap (klass : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_locale_encindex () : cint; cdecl; external RUBY_LIB;
function rb_locale_encoding () : Pointer; cdecl; external RUBY_LIB;
function rb_locale_str_new (ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_locale_str_new_cstr (ptr : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_make_backtrace () : VALUE; cdecl; external RUBY_LIB;
function rb_make_exception (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_make_metaclass (obj, unused : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_mark_generic_ivar (obj : VALUE); cdecl; external RUBY_LIB;
procedure rb_mark_generic_ivar_tbl (); cdecl; external RUBY_LIB;
procedure rb_mark_hash (tbl : Pointer); cdecl; external RUBY_LIB;
procedure rb_mark_set (tbl : Pointer); cdecl; external RUBY_LIB;
procedure rb_mark_tbl (tbl : Pointer); cdecl; external RUBY_LIB;
procedure rb_marshal_define_compat (newclass, oldclass : VALUE;
                dumper : p_dumper; loader : p_loader); cdecl; external RUBY_LIB;
function rb_marshal_dump (obj, port : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_marshal_load (port : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_match_busy (match : VALUE); cdecl; external RUBY_LIB;
function rb_memcicmp (x, y : Pointer; len : clong) : cint; cdecl;
                                                              external RUBY_LIB;
procedure rb_memerror (); cdecl; external RUBY_LIB;
function rb_memhash (ptr : Pointer; len : clong) : st_index_t; cdecl;
                                                              external RUBY_LIB;
function rb_memsearch (x0 : Pointer; m : clong; x1 : Pointer; n : clong;
                               enc : Pointer) : clong; cdecl; external RUBY_LIB;
function rb_method_basic_definition_p (klass : VALUE; id : ID) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_method_boundp (klass : VALUE; id : ID; ex : cint) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_method_call (argc : cint; argv : PVALUE; method : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_method_get_iseq (method : VALUE) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_mod_ancestors (_mod : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_mod_class_variables (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_mod_constants (argc : cint; argv : PVALUE; _mod : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_mod_const_at (_mod : VALUE; data : Pointer) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_mod_const_missing (klass, name : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_mod_const_of (_mod : VALUE; data : Pointer) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_mod_included_modules (_mod : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_mod_include_p (_mod, mod2 : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_mod_init_copy (clone, orig : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_mod_method_arity (_mod : VALUE; id : ID) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_mod_module_eval (argc : cint; argv : PVALUE; _mod : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_mod_module_exec (argc : cint; argv : PVALUE; _mod : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_mod_name (_mod : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_mod_remove_const (_mod, name : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_mod_remove_cvar (_mod, name : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_mod_syserr_fail (_mod : VALUE; e : cint; mesg : PChar); cdecl;
                                                              external RUBY_LIB;
procedure rb_mod_syserr_fail_str (_mod : VALUE; e : cint; mesg : VALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_mod_sys_fail (_mod : VALUE; mesg : PChar); cdecl;
                                                              external RUBY_LIB;
procedure rb_mod_sys_fail_str (_mod, mesg : VALUE); cdecl; external RUBY_LIB;
function rb_module_new () : VALUE; cdecl; external RUBY_LIB;
function rb_mutex_lock (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_mutex_locked_p (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_mutex_new () : VALUE; cdecl; external RUBY_LIB;
function rb_mutex_sleep (_self, timeout : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_mutex_synchronize (mutex : VALUE; func : p_func;
                                 arg : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_mutex_trylock (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_mutex_unlock (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_name_class (klass : VALUE; id : ID); cdecl; external RUBY_LIB;
procedure rb_name_error (id : ID; fmt : PChar); varargs; cdecl;
                                                              external RUBY_LIB;
procedure rb_need_block (); cdecl; external RUBY_LIB;
function rb_newobj () : VALUE; cdecl; external RUBY_LIB;
procedure rb_notimplement (); cdecl; external RUBY_LIB;
function rb_num2dbl (val : VALUE) : cdouble; cdecl; external RUBY_LIB;
function rb_num2fix (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_num2int (val : VALUE) : clong; cdecl; external RUBY_LIB;
function rb_num2ll (val : VALUE) : clonglong; cdecl; external RUBY_LIB;
function rb_num2long (val : VALUE) : PtrInt; cdecl; external RUBY_LIB;
function rb_num2uint (val : VALUE) : culong; cdecl; external RUBY_LIB;
function rb_num2ull (val : VALUE) : culonglong; cdecl; external RUBY_LIB;
function rb_num2ulong (val : VALUE) : PtrUInt; cdecl; external RUBY_LIB;
function rb_num_coerce_bin (x, y : VALUE; func : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_num_coerce_cmp (x, y : VALUE; func : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_num_coerce_relop (x, y : VALUE; func : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_num_zerodiv (); cdecl; external RUBY_LIB;
function rb_obj_alloc (klass : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_as_string (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_obj_call_init (obj : VALUE; argc : cint; argv : PVALUE); cdecl;
                                                              external RUBY_LIB;
function rb_obj_class (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_classname (obj : VALUE) : PChar; cdecl; external RUBY_LIB;
function rb_obj_clone (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_dup (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_encoding (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_freeze (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_frozen_p (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_id (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_obj_infect (obj1, obj2 : VALUE); cdecl; external RUBY_LIB;
function rb_obj_init_copy (obj, orig : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_instance_eval (argc : cint; argv : PVALUE;
                               _self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_instance_exec (argc : cint; argv : PVALUE;
                               _self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_instance_variables (obj : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_obj_is_instance_of (obj, c : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_obj_is_kind_of (obj, c : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_is_method (m : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_is_proc (proc : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_method (obj, vid : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_method_arity (obj : VALUE; id : ID) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_obj_remove_instance_variable (obj, name : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_obj_respond_to (obj : VALUE; id : ID; priv : cint) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_obj_singleton_methods (argc : cint; argv : PVALUE;
                                 obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_objspace_data_type_memsize (obj : VALUE) : csize_t; cdecl;
                                                              external RUBY_LIB;
function rb_objspace_data_type_name (obj : VALUE) : PChar; cdecl;
                                                              external RUBY_LIB;
procedure rb_objspace_each_objects (callback : each_obj_callback;
                                      data : Pointer); cdecl; external RUBY_LIB;
function rb_obj_taint (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_tainted (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_trust (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_untaint (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_untrust (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_obj_untrusted (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_p (obj : VALUE); cdecl; external RUBY_LIB;
function rb_parser_append_print (vparser : VALUE; node : Pointer) : Pointer;
                                                       cdecl; external RUBY_LIB;
function rb_parser_calloc (parser : Pointer; nelem, size : csize_t) : Pointer;
                                                       cdecl; external RUBY_LIB;
function rb_parser_compile_cstr (vparser : VALUE; f, s : PChar;
                          len, line : cint) : Pointer; cdecl; external RUBY_LIB;
function rb_parser_compile_file (vparser : VALUE; f : PChar; _file : VALUE;
                              start : cint) : Pointer; cdecl; external RUBY_LIB;
function rb_parser_compile_string (vparser : VALUE; f : PChar; s : VALUE;
                               line : cint) : Pointer; cdecl; external RUBY_LIB;
function rb_parser_dump_tree (node : Pointer; comment : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_parser_encoding (vparser : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_parser_end_seen_p (vparser : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_parser_free (parser, ptr : Pointer); cdecl; external RUBY_LIB;
function rb_parser_get_yydebug (_self : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_parser_malloc (parser : Pointer; size : csize_t) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_parser_new () : VALUE; cdecl; external RUBY_LIB;
function rb_parser_realloc (parser, ptr : Pointer; size : csize_t) : Pointer;
                                                       cdecl; external RUBY_LIB;
function rb_parser_set_yydebug (_self, flag : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_parser_while_loop (vparser : VALUE; node : Pointer;
                        chop, split : cint) : Pointer; cdecl; external RUBY_LIB;
function rb_path2class (path : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_path_check (path : PChar) : cint; cdecl; external RUBY_LIB;
function rb_path_to_class (pathname : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_pipe (pipes : pcint) : cint; cdecl; external RUBY_LIB;
function rb_proc_arity (_self : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_proc_call (_self, args : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_proc_call_with_block (_self : VALUE; argc : cint; argv : PVALUE;
                        pass_procval : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_proc_exec (str : PChar) : cint; cdecl; external RUBY_LIB;
function rb_proc_exec_n (argc : cint; argv : PVALUE; prog : PChar) : cint;
                                                       cdecl; external RUBY_LIB;
function rb_proc_get_iseq (_self : VALUE; is_proc : pcint) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_proc_lambda_p (procval : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_proc_new (func : Pointer; val : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_proc_times (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_protect (proc : p_func; data : VALUE; status : pcint) : VALUE;
                                                       cdecl; external RUBY_LIB;
procedure rb_provide (feature : PChar); cdecl; external RUBY_LIB;
function rb_provided (feature : PChar) : cint; cdecl; external RUBY_LIB;
procedure rb_quad_pack (buf : PChar; val : VALUE); cdecl; external RUBY_LIB;
function rb_quad_unpack (buf : PChar; sign : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_raise (exc : VALUE; fmt : PChar); varargs; cdecl;
                                                              external RUBY_LIB;
function rb_random_bytes (obj : VALUE; n : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_random_int32 (obj : VALUE) : cuint; cdecl; external RUBY_LIB;
function rb_random_real (obj : VALUE) : cdouble; cdecl; external RUBY_LIB;
function rb_range_beg_len (range : VALUE; begp, lenp : pclong; len : clong;
                                  err : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_range_new (beg, _end : VALUE; exclude_end : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_range_values (range : VALUE; begp, endp : PVALUE;
                                exclp : pcint) : cint; cdecl; external RUBY_LIB;
function rb_Rational (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_rational_new (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_rational_raw (x, y : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_read_check (fp : Pointer); cdecl; external RUBY_LIB;
function rb_reg_adjust_startpos (re, str : VALUE; pos : clong;
                              reverse : cint) : clong; cdecl; external RUBY_LIB;
function rb_reg_alloc () : VALUE; cdecl; external RUBY_LIB;
function rb_reg_backref_number (match, backref : VALUE) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_reg_init_str (re, s : VALUE; options : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_register_transcoder (tr : Pointer); cdecl; external RUBY_LIB;
function rb_reg_last_match (match : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_match (re, str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_match2 (re : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_match_last (match : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_match_post (match : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_match_pre (match : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_new (s : PChar; len : clong; options : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_reg_new_str (s : VALUE; options : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_reg_nth_defined (nth : cint; match : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_reg_nth_match (nth : cint; match : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_reg_options (re : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_reg_prepare_re (re, str : VALUE) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_reg_quote (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_regcomp (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_regsub (str, src : VALUE; regs : Pointer;
                              regexp : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_reg_search (re, str : VALUE; pos : clong; reverse : cint) : clong;
                                                       cdecl; external RUBY_LIB;
function rb_remove_event_hook (func : rb_event_hook_func_t) : cint; cdecl;
                                                              external RUBY_LIB;
procedure rb_remove_method (klass : VALUE; name : PChar); cdecl;
                                                              external RUBY_LIB;
procedure rb_remove_method_id (klass : VALUE; mid : ID); cdecl;
                                                              external RUBY_LIB;
function rb_require (fname : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_require_safe (fname : VALUE; safe : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_rescue (b_proc : Pointer; data1 : VALUE;
             r_proc : Pointer; data2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_rescue2 (b_proc : Pointer; data1 : VALUE;
    r_proc : Pointer; data2 : VALUE) : VALUE; varargs; cdecl; external RUBY_LIB;
function rb_reserved_fd_p (fd : cint) : cint; cdecl; external RUBY_LIB;
function rb_reserved_word (str : PChar; len : cuint) : Pointer; cdecl;
                                                              external RUBY_LIB;
procedure rb_reset_coverages (); cdecl; external RUBY_LIB;
procedure rb_reset_random_seed (); cdecl; external RUBY_LIB;
function rb_respond_to (obj : VALUE; id : ID) : cint; cdecl; external RUBY_LIB;
function rb_ruby_debug_ptr () : Pointer; cdecl; external RUBY_LIB;
function rb_ruby_verbose_ptr () : Pointer; cdecl; external RUBY_LIB;
function rb_run_exec_options (e, s : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_run_exec_options_err (e, s : Pointer;
      errmsg : PChar; errmsg_buflen : csize_t) : cint; cdecl; external RUBY_LIB;
function rb_safe_level () : cint; cdecl; external RUBY_LIB;
function rb_scan_args (argc : cint; argv : PVALUE; fmt : PChar) : cint; varargs;
                                                       cdecl; external RUBY_LIB;
procedure rb_secure (level : cint); cdecl; external RUBY_LIB;
procedure rb_secure_update (obj : VALUE); cdecl; external RUBY_LIB;
procedure rb_set_class_path (klass, under : VALUE; name : PChar); cdecl;
                                                              external RUBY_LIB;
procedure rb_set_class_path_string (klass, under, name : VALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_set_coverages (coverages : VALUE); cdecl; external RUBY_LIB;
procedure rb_set_end_proc (func : p_end_proc; data : VALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_set_errinfo (err : VALUE); cdecl; external RUBY_LIB;
procedure rb_set_safe_level (level : cint); cdecl; external RUBY_LIB;
procedure rb_set_safe_level_force (safe : cint); cdecl; external RUBY_LIB;
function rb_singleton_class (obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_singleton_class_attached (klass, obj : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_singleton_class_clone (obj : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_sourcefile () : PChar; cdecl; external RUBY_LIB;
function rb_sourceline () : cint; cdecl; external RUBY_LIB;
function rb_spawn (argc : cint; argv : PVALUE) : PtrUInt; cdecl;
                                                              external RUBY_LIB;
function rb_spawn_err (argc : cint; argv : PVALUE;
   errmsg : PChar; errmsg_buflen : csize_t) : PtrUInt; cdecl; external RUBY_LIB;
function rb_sprintf (format : PChar) : VALUE; varargs; cdecl; external RUBY_LIB;
function rb_str2inum (str : VALUE; base : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_append (str, str2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_str_associate (str, add : VALUE); cdecl; external RUBY_LIB;
function rb_str_associated (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_buf_append (str, str2 : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_buf_cat (str : VALUE; ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_buf_cat2 (str : VALUE; ptr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_buf_cat_ascii (str : VALUE; ptr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_buf_new (capa : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_str_buf_new2 (ptr : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_str_buf_new_cstr (ptr : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_str_capacity (str : VALUE) : csize_t; cdecl; external RUBY_LIB;
function rb_str_cat (str : VALUE; ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_cat2 (str : VALUE; ptr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_catf (str : VALUE; format : PChar) : VALUE; varargs; cdecl;
                                                              external RUBY_LIB;
function rb_str_cmp (str1, str2 : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_str_coderange_scan_restartable (s, e : PChar; enc : Pointer;
                                  cr : pcint) : clong; cdecl; external RUBY_LIB;
function rb_str_comparable (str1, str2 : VALUE) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_str_concat (str1, str2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_conv_enc (str : VALUE; from, _to : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_conv_enc_opts (str : VALUE; from, _to : Pointer;
              ecflags : cint; ecopts : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_drop_bytes (str : VALUE; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_dump (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_dup (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_dup_frozen (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_ellipsize (str : VALUE; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_encode (str, _to : VALUE; ecflags : cint;
                              ecopts : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_encode_ospath (path : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_equal (str1, str2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_export (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_export_locale (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_export_to_enc (str : VALUE; enc : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_format (argc : cint; argv : PVALUE; fmt : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_str_free (str : VALUE); cdecl; external RUBY_LIB;
function rb_str_freeze (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_hash (str : VALUE) : st_index_t; cdecl; external RUBY_LIB;
function rb_str_hash_cmp (str1, str2 : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_String (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_string_value (ptr : PVALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_string_value_cstr (ptr : PVALUE) : PChar; cdecl; external RUBY_LIB;
function rb_string_value_ptr (ptr : PVALUE) : PChar; cdecl; external RUBY_LIB;
function rb_str_inspect (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_intern (s : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_length (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_locktmp (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_memsize (str : VALUE) : csize_t; cdecl; external RUBY_LIB;
procedure rb_str_modify (str : VALUE); cdecl; external RUBY_LIB;
procedure rb_str_modify_expand (str : VALUE; expand : clong); cdecl;
                                                              external RUBY_LIB;
function rb_str_new (ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_new2 (ptr : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_str_new3 (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_new4 (orig : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_new5 (klass : VALUE; ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_new_cstr (ptr : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_str_new_frozen (orig : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_new_shared (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_new_with_class (klass : VALUE; ptr : PChar;
                                 len : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_str_offset (str : VALUE; pos : clong) :  clong; cdecl;
                                                              external RUBY_LIB;
function rb_str_plus (str1, str2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_replace (str, str2 : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_resize (str : VALUE; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_resurrect (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_str_set_len (str : VALUE; len : clong); cdecl; external RUBY_LIB;
procedure rb_str_setter (val : VALUE; id : ID; _var : PVALUE); cdecl;
                                                              external RUBY_LIB;
procedure rb_str_shared_replace (str, str2 : VALUE); cdecl; external RUBY_LIB;
function rb_str_split (str : VALUE; sep0 : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_strlen (str : VALUE) : clong; cdecl; external RUBY_LIB;
function rb_str_sublen (str : VALUE; pos : clong) : clong; cdecl;
                                                              external RUBY_LIB;
function rb_str_subseq (str : VALUE; beg, len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_substr (str : VALUE; beg, len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_succ (orig : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_times (str, times : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_tmp_new (len : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_str_to_dbl (str : VALUE; badcheck : cint) : cdouble; cdecl;
                                                              external RUBY_LIB;
function rb_str_to_inum (str : VALUE; base, badcheck : cint) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_str_to_str (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_struct_alloc (klass, values : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_struct_alloc_noinit (klass : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_struct_aref (s, idx : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_struct_aset (s, idx, val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_struct_define (name : PChar) : VALUE; varargs; cdecl;
                                                              external RUBY_LIB;
function rb_struct_define_without_accessor (class_name : PChar; super : VALUE;
            alloc : rb_alloc_func_t) : VALUE; varargs; cdecl; external RUBY_LIB;
function rb_struct_getmember (obj : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_struct_initialize (_self, values : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_struct_iv_get (c : VALUE; name : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_struct_members (s : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_struct_new (klass : VALUE) : VALUE; varargs; cdecl;
                                                              external RUBY_LIB;
function rb_struct_s_members (klass : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_str_unlocktmp (str : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_str_update (str : VALUE; beg, len : clong; val : VALUE); cdecl;
                                                              external RUBY_LIB;
function rb_sym_all_symbols () : VALUE; cdecl; external RUBY_LIB;
function rb_symname_p (name : PChar) : cint; cdecl; external RUBY_LIB;
function rb_sym_to_s (sym : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_syserr_fail (e : cint; mesg : PChar); cdecl; external RUBY_LIB;
procedure rb_syserr_fail_str (e : cint; mesg : VALUE); cdecl; external RUBY_LIB;
function rb_syserr_new (n : cint; mesg : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_syserr_new_str (n : cint; arg : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_sys_fail (mesg : PChar); cdecl; external RUBY_LIB;
procedure rb_sys_fail_str (mesg : VALUE); cdecl; external RUBY_LIB;
procedure rb_syswait (pid : PtrUInt); cdecl; external RUBY_LIB;
procedure rb_sys_warning (fmt : PChar); varargs; cdecl; external RUBY_LIB;
function rb_tainted_str_new (ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tainted_str_new2 (ptr : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_tainted_str_new_cstr (ptr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_thread_alone () : cint; cdecl; external RUBY_LIB;
procedure rb_thread_atfork (); cdecl; external RUBY_LIB;
procedure rb_thread_atfork_before_exec (); cdecl; external RUBY_LIB;
function rb_thread_blocking_region (func : rb_blocking_function_t;
         data1 : Pointer; ubf : rb_unblock_function_t; data2 : Pointer) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_thread_call_with_gvl (func : p_gvl_func; data1 : Pointer) : Pointer;
                                                       cdecl; external RUBY_LIB;
function rb_thread_call_without_gvl (func : rb_blocking_function_t;
         data1 : Pointer; ubf : rb_unblock_function_t; data2 : Pointer) : VALUE;
                                                       cdecl; external RUBY_LIB;
procedure rb_thread_check_ints (); cdecl; external RUBY_LIB;
function rb_thread_check_trap_pending () : cint; cdecl; external RUBY_LIB;
function rb_thread_create (fn, arg : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_thread_current () : VALUE; cdecl; external RUBY_LIB;
procedure rb_thread_fd_close (fd : cint); cdecl; external RUBY_LIB;
function rb_thread_fd_select (max : cint; read, write, _except : Pointer;
                           timeout : ptimeval) : cint; cdecl; external RUBY_LIB;
function rb_thread_fd_writable (fd : cint) : cint; cdecl; external RUBY_LIB;
function rb_thread_interrupted (thval : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_thread_io_blocking_region (func : rb_blocking_function_t;
                  data1 : Pointer; fd : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_thread_kill (thread : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_thread_local_aref (thread : VALUE; id : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_thread_local_aset (thread : VALUE; id : ID; val : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_thread_main () : VALUE; cdecl; external RUBY_LIB;
procedure rb_thread_polling (); cdecl; external RUBY_LIB;
function rb_thread_run (thread : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_thread_schedule (); cdecl; external RUBY_LIB;
function rb_thread_select (max : cint; read, write, _except : Pointer;
                           timeout : ptimeval) : cint; cdecl; external RUBY_LIB;
procedure rb_thread_sleep (sec : cint); cdecl; external RUBY_LIB;
procedure rb_thread_sleep_forever (); cdecl; external RUBY_LIB;
function rb_thread_stop () : VALUE; cdecl; external RUBY_LIB;
procedure rb_thread_wait_fd (fd : cint); cdecl; external RUBY_LIB;
procedure rb_thread_wait_for (time : timeval); cdecl; external RUBY_LIB;
function rb_thread_wakeup (thread : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_thread_wakeup_alive (thread : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_throw (tag : PChar; val : VALUE); cdecl; external RUBY_LIB;
procedure rb_throw_obj (tag, val : VALUE); cdecl; external RUBY_LIB;
function rb_time_interval (num : VALUE) : timeval; cdecl; external RUBY_LIB;
function rb_time_nano_new (sec : time_t; nsec : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_time_new (sec : time_t; usec : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_time_num_new (timev, off : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_time_succ (time : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_time_timespec (time : VALUE) : timespec; cdecl; external RUBY_LIB;
function rb_time_timeval (time : VALUE) : timeval; cdecl; external RUBY_LIB;
function rb_to_encoding (enc : VALUE) : Pointer; cdecl; external RUBY_LIB;
function rb_to_encoding_index (enc : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_to_float (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_to_id (name : VALUE) : ID; cdecl; external RUBY_LIB;
function rb_to_int (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_tolower (c : cint) : cint; cdecl; external RUBY_LIB;
function rb_toupper (c : cint) : cint; cdecl; external RUBY_LIB;
procedure rb_trap_exit (); cdecl; external RUBY_LIB;
function rb_typeddata_inherited_p (child, parent : Pointer) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_typeddata_is_kind_of (obj : VALUE; data_type : Pointer) : cint;
                                                       cdecl; external RUBY_LIB;
function rb_uint2big (n : PtrUInt) : VALUE; cdecl; external RUBY_LIB;
function rb_uint2inum (n : PtrUInt) : VALUE; cdecl; external RUBY_LIB;
function rb_ull2inum (n : culonglong) : VALUE; cdecl; external RUBY_LIB;
procedure rb_undef (klass : VALUE; id : ID); cdecl; external RUBY_LIB;
procedure rb_undef_alloc_func (klass : VALUE); cdecl; external RUBY_LIB;
procedure rb_undef_method (klass : VALUE; name : PChar); cdecl;
                                                              external RUBY_LIB;
procedure rb_update_max_fd (fd : cint); cdecl; external RUBY_LIB;
function rb_usascii_encindex () : cint; cdecl; external RUBY_LIB;
function rb_usascii_encoding () : Pointer; cdecl; external RUBY_LIB;
function rb_usascii_str_new (ptr : PChar; len : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_usascii_str_new2 (ptr : PChar) : VALUE; cdecl; external RUBY_LIB;
function rb_usascii_str_new_cstr (ptr : PChar) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_utf8_encindex () : cint; cdecl; external RUBY_LIB;
function rb_utf8_encoding () : Pointer; cdecl; external RUBY_LIB;
function rb_wait_for_single_fd (fd, events : cint; tv : ptimeval) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_waitpid (pid : PtrUInt; st : pcint; flags : cint) : PtrUInt; cdecl;
                                                              external RUBY_LIB;
procedure rb_warn (fmt : PChar); varargs; cdecl; external RUBY_LIB;
procedure rb_warning (fmt : PChar); varargs; cdecl; external RUBY_LIB;
procedure rb_write_error (mesg : PChar); cdecl; external RUBY_LIB;
procedure rb_write_error2 (mesg : PChar; len : clong); cdecl; external RUBY_LIB;
function rb_yield (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_yield_splat (values : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_yield_values (n : cint) : VALUE; varargs; cdecl; external RUBY_LIB;
function rb_yield_values2 (argc : cint; argv : PVALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function ruby_brace_glob (str : PChar; flags : cint; func : ruby_glob_func;
                                  arg : VALUE) : cint; cdecl; external RUBY_LIB;
function ruby_cleanup (ex : cint) : cint; cdecl; external RUBY_LIB;
procedure ruby_debug_breakpoint (); cdecl; external RUBY_LIB;
function ruby_debug_print_id (level, debug_level : cint; header : PChar;
                                        id : ID) : ID; cdecl; external RUBY_LIB;
function ruby_debug_print_indent (
      level, debug_level, indent_level : cint) : cint; cdecl; external RUBY_LIB;
function ruby_debug_print_node (level, debug_level : cint; header : PChar;
                            node : Pointer) : Pointer; cdecl; external RUBY_LIB;
function ruby_debug_print_value (level, debug_level : cint; header : PChar;
                                 obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure ruby_default_signal (sig : cint); cdecl; external RUBY_LIB;
procedure ruby_each_words (str : PChar; func : p_each_words_func;
                                       arg : Pointer); cdecl; external RUBY_LIB;
function ruby_enc_find_basename (name : PChar; baselen, alllen : pclong;
                               enc : Pointer) : PChar; cdecl; external RUBY_LIB;
function ruby_enc_find_extname (name : PChar; len : pclong;
                               enc : Pointer) : PChar; cdecl; external RUBY_LIB;
function ruby_exec_node (n : Pointer) : cint; cdecl; external RUBY_LIB;
function ruby_executable_node (n : Pointer; status : pcint) : cint; cdecl;
                                                              external RUBY_LIB;
procedure ruby_finalize (); cdecl; external RUBY_LIB;
function ruby_getcwd () : PChar; cdecl; external RUBY_LIB;
function ruby_glob (path : PChar; flags : cint; func : ruby_glob_func;
                                  arg : VALUE) : cint; cdecl; external RUBY_LIB;
procedure ruby_incpush (path : PChar); cdecl; external RUBY_LIB;
procedure ruby_init (); cdecl; external RUBY_LIB;
procedure ruby_Init_Continuation_body (); cdecl; external RUBY_LIB;
procedure ruby_init_ext (name : PChar; init : p_init_ext_func); cdecl;
                                                              external RUBY_LIB;
procedure ruby_Init_Fiber_as_Coroutine (); cdecl; external RUBY_LIB;
procedure ruby_init_loadpath (); cdecl; external RUBY_LIB;
procedure ruby_init_stack (addr : PVALUE); cdecl; external RUBY_LIB;
function ruby_native_thread_p () : cint; cdecl; external RUBY_LIB;
function ruby_node_name (node : cint) : PChar; cdecl; external RUBY_LIB;
function ruby_options (argc : cint; argv : PPChar) : Pointer; cdecl;
                                                              external RUBY_LIB;
function ruby_process_options (argc : cint; argv : PPChar) : Pointer; cdecl;
                                                              external RUBY_LIB;
procedure ruby_prog_init (); cdecl; external RUBY_LIB;
procedure ruby_qsort (base : Pointer; nel, size : csize_t; cmp : p_cmp_func;
                                      d : Pointer); cdecl; external RUBY_LIB;
function ruby_run_node (n : Pointer) : cint; cdecl; external RUBY_LIB;
function ruby_scan_hex (start : PChar; len : csize_t;
                          retlen : pcsize_t) : culong; cdecl; external RUBY_LIB;
function ruby_scan_oct (start : PChar; len : csize_t;
                          retlen : pcsize_t) : culong; cdecl; external RUBY_LIB;
procedure ruby_script (name : PChar); cdecl; external RUBY_LIB;
procedure ruby_set_argv (argc : cint; argv : PPChar); cdecl; external RUBY_LIB;
procedure ruby_set_debug_option (str : PChar; len : cint; arg : Pointer); cdecl;
                                                              external RUBY_LIB;
procedure ruby_setenv (name, value : PChar); cdecl; external RUBY_LIB;
procedure ruby_show_copyright (); cdecl; external RUBY_LIB;
procedure ruby_show_version (); cdecl; external RUBY_LIB;
procedure ruby_sig_finalize (); cdecl; external RUBY_LIB;
function ruby_signal_name (no : cint) : PChar; cdecl; external RUBY_LIB;
function ruby_snprintf (str : PChar; n : csize_t; fmt : PChar) : cint; varargs;
                                                       cdecl; external RUBY_LIB;
function ruby_stack_check () : cint; cdecl; external RUBY_LIB;
function ruby_stack_length (p : PPVALUE) : csize_t; cdecl; external RUBY_LIB;
procedure ruby_stop (ex : cint); cdecl; external RUBY_LIB;
function ruby_strdup (str : PChar) : PChar; cdecl; external RUBY_LIB;
function ruby_strtod (s00 : PChar; se : PPChar) : cdouble; cdecl;
                                                              external RUBY_LIB;
function ruby_strtoul (str : PChar; endptr : PPChar; base : cint) : culong;
                                                       cdecl; external RUBY_LIB;
procedure ruby_sysinit (argc : pcint; argv : PPPChar); cdecl; external RUBY_LIB;
procedure ruby_unsetenv (name : PChar); cdecl; external RUBY_LIB;
procedure ruby_vm_at_exit (func : p_at_exit); cdecl; external RUBY_LIB;
function ruby_vm_destruct (vm : Pointer) : cint; cdecl; external RUBY_LIB;
function ruby_xcalloc (n, size : csize_t) : Pointer; cdecl; external RUBY_LIB;
procedure ruby_xfree (x : Pointer); cdecl; external RUBY_LIB;
function ruby_xmalloc (size : csize_t) : Pointer; cdecl; external RUBY_LIB;
function ruby_xmalloc2 (n, size : csize_t) : Pointer; cdecl; external RUBY_LIB;
function ruby_xrealloc (ptr : Pointer; size : csize_t) : Pointer; cdecl;
                                                              external RUBY_LIB;
function ruby_xrealloc2 (ptr : Pointer; n, size : csize_t) : Pointer; cdecl;
                                                              external RUBY_LIB;

{$if defined(RUBY19)}
var
  rb_infinity : VALUE; cvar; external RUBY_LIB;
  rb_nan : VALUE; cvar; external RUBY_LIB;

function rb_barrier_destroy (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_barrier_new () : VALUE; cdecl; external RUBY_LIB;
function rb_barrier_release (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_barrier_wait (_self : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_disable_interrupt (); cdecl; external RUBY_LIB;
procedure rb_enable_interrupt (); cdecl; external RUBY_LIB;
procedure rb_file_const (name : PChar; value : VALUE); cdecl; external RUBY_LIB;
function rb_file_load_ok (path : PChar) : cint; cdecl; external RUBY_LIB;
function rb_float_new (d : cdouble) : VALUE; cdecl; external RUBY_LIB; platform;
procedure rb_gc_mark_parser (); cdecl; external RUBY_LIB;
procedure rb_gc_mark_symbols (); cdecl; external RUBY_LIB;
procedure rb_gc_mark_threads (); cdecl; external RUBY_LIB;
procedure rb_load_fail (path : PChar); cdecl; external RUBY_LIB;
procedure rb_mark_end_proc (); cdecl; external RUBY_LIB;
function rb_vm_get_sourceline (cfp : Pointer) : cint; cdecl; external RUBY_LIB;
function rb_vm_make_env_object (th, cfp : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;

const
  p_rb_float_new : p_double_constructor = @rb_float_new;
{$endif}

{$if defined(RUBY20)}
function rb_funcall_with_block (recv : VALUE; mid : ID;
                      argc : cint; argv : PVALUE; pass_procval : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_method_call_with_block (argc : cint; argv : PVALUE;
                method, pass_procval : VALUE) : VALUE; cdecl; external RUBY_LIB;

var
  ruby_global_name_punct_bits : array [0..2] of cuint; cvar; external RUBY_LIB;

function rb_ary_rotate (ary : VALUE; cnt : clong) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_ary_shared_with_p (ary1, ary2 : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
procedure rb_check_copyable (obj, orig : VALUE); cdecl; external RUBY_LIB;
function rb_check_id (namep : PVALUE) : ID; cdecl; external RUBY_LIB;
function rb_check_id_cstr (ptr : PChar; len : clong; enc : Pointer) : ID; cdecl;
                                                              external RUBY_LIB;
function rb_check_to_int (val : VALUE) : VALUE; cdecl; external RUBY_LIB;
procedure rb_check_trusted (obj : VALUE); cdecl; external RUBY_LIB;
function rb_cloexec_dup (oldfd : cint) : cint; cdecl; external RUBY_LIB;
function rb_cloexec_dup2 (oldfd, newfd : cint) : cint; cdecl; external RUBY_LIB;
function rb_cloexec_fcntl_dupfd (fd, minfd : cint) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_cloexec_open (pathname : PChar; flags, mode : cint) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_debug_inspector_backtrace_locations (dc : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_debug_inspector_frame_binding_get (dc : Pointer;
                               index : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_debug_inspector_frame_class_get (dc : Pointer;
                               index : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_debug_inspector_frame_iseq_get (dc : Pointer;
                               index : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_debug_inspector_frame_self_get (dc : Pointer;
                               index : clong) : VALUE; cdecl; external RUBY_LIB;
function rb_debug_inspector_open (func : rb_debug_inspector_func_t;
                              data : Pointer) : VALUE; cdecl; external RUBY_LIB;
procedure rb_encdb_set_unicode (index : cint); cdecl; external RUBY_LIB;
procedure rb_enc_raise (enc : Pointer; exc : VALUE; fmt : PChar); varargs;
                                                       cdecl; external RUBY_LIB;
function rb_enumeratorize_with_size (obj, meth : VALUE;
                         argc : cint; argv : PVALUE; size_fn : Pointer) : VALUE;
                                                       cdecl; external RUBY_LIB;
function rb_enum_values_pack (argc : cint; argv : PVALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
procedure rb_error_arity (argc, min, max : cint); cdecl; external RUBY_LIB;
procedure rb_error_untrusted (obj : VALUE); cdecl; external RUBY_LIB;
function rb_execarg_addopt (execarg_obj, key, val : VALUE) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_execarg_extract_options (execarg_obj, opthash : VALUE) : VALUE;
                                                       cdecl; external RUBY_LIB;
procedure rb_execarg_fixup (execarg_obj : VALUE); cdecl; external RUBY_LIB;
function rb_execarg_get (execarg_obj : VALUE) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_execarg_init (argc : cint; argv : PVALUE; accept_shell : cint;
                         execarg_obj : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_execarg_new (argc : cint; argv : PVALUE;
                         accept_shell : cint) : VALUE; cdecl; external RUBY_LIB;
function rb_execarg_run_options (eargp, sargp : Pointer;
      errmsg : PChar; errmsg_buflen : csize_t) : cint; cdecl; external RUBY_LIB;
procedure rb_execarg_setenv (execarg, env : VALUE); cdecl; external RUBY_LIB;
function rb_exec_async_signal_safe (eargp : Pointer;
      errmsg : PChar; errmsg_buflen : csize_t) : cint; cdecl; external RUBY_LIB;
procedure rb_fd_fix_cloexec (fd : cint); cdecl; external RUBY_LIB;
function rb_find_encoding (enc : VALUE) : Pointer; cdecl; external RUBY_LIB;
function rb_fix2short (val : VALUE) : cshort; cdecl; external RUBY_LIB;
function rb_fix2ushort (val : VALUE) : cushort; cdecl; external RUBY_LIB;
function rb_float_new_in_heap (d : cdouble) : VALUE; cdecl; external RUBY_LIB; platform;
function rb_fork_async_signal_safe (status : pcint;
                            chfunc : p_chfunc_msg; charg : Pointer; fds : VALUE;
                             errmsg : PChar; errmsg_buflen : csize_t) : PtrUInt;
                                                       cdecl; external RUBY_LIB;
function rb__Hash (val : VALUE) : VALUE; cdecl;
                                               external RUBY_LIB name 'rb_Hash';
function rb_hash_clear (hash : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_include_class_new (module, super : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_io_check_io (io : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_is_attrset_id (id : ID) : cint; cdecl; external RUBY_LIB;
function rb_iseq_compile_on_base (src, _file, line : VALUE;
                        base_block : Pointer) : VALUE; cdecl; external RUBY_LIB;
function rb_iseq_line_no (iseq : Pointer; pos : csize_t) : cuint; cdecl;
                                                              external RUBY_LIB;
function rb_iseq_line_trace_all (iseqval : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_iseq_line_trace_each (iseqval : VALUE;
                          func : p_iseq_line_trace_func; data : Pointer) : cint;
                                                       cdecl; external RUBY_LIB;
function rb_iseq_line_trace_specify (iseqval, pos, _set : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_is_global_id (id : ID) : cint; cdecl; external RUBY_LIB;
procedure rb_iter_break_value (val : VALUE); cdecl; external RUBY_LIB;
procedure rb_loaderror_with_path (path : VALUE; fmt : PChar); varargs; cdecl;
                                                              external RUBY_LIB;
procedure rb_maygvl_fd_fix_cloexec (fd : cint); cdecl; external RUBY_LIB;
procedure rb_must_asciicompat (str : VALUE); cdecl; external RUBY_LIB;
procedure rb_name_error_str (str : VALUE; fmt : PChar); varargs; cdecl;
                                                              external RUBY_LIB;
function rb_newobj_of (klass, flags : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_num2short (val : VALUE) : cshort; cdecl; external RUBY_LIB;
function rb_num2ushort (val : VALUE) : cushort; cdecl; external RUBY_LIB;
function rb_num_coerce_bit (x, y : VALUE; func : ID) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_objspace_internal_object_p (obj : VALUE) : cint; cdecl;
                                                              external RUBY_LIB;
function rb_objspace_markable_object_p (obj : VALUE) : cint; cdecl;
                                                              external RUBY_LIB;
procedure rb_objspace_reachable_objects_from (obj : VALUE;
     func : p_reachable_objects_func; data : Pointer); cdecl; external RUBY_LIB;
procedure rb_prepend_module (klass, module : VALUE); cdecl; external RUBY_LIB;
function rb_random_ulong_limited (obj : VALUE; limit : culong) : culong; cdecl;
                                                              external RUBY_LIB;
function rb_remove_event_hook_with_data (func : rb_event_hook_func_t;
                                 data : VALUE) : cint; cdecl; external RUBY_LIB;
procedure rb_thread_add_event_hook (thval : VALUE; func : rb_event_hook_func_t;
               flags : rb_event_flag_t; data : VALUE); cdecl; external RUBY_LIB;
function rb_thread_call_without_gvl2 (func : p_gvl_func; data1 : Pointer;
                        ubf : rb_unblock_function_t; data2 : Pointer) : Pointer;
                                                       cdecl; external RUBY_LIB;
function rb_thread_remove_event_hook (thval : VALUE;
                  func : rb_event_hook_func_t) : cint; cdecl; external RUBY_LIB;
function rb_thread_remove_event_hook_with_data (thval : VALUE;
    func : rb_event_hook_func_t; data : VALUE) : cint; cdecl; external RUBY_LIB;
function rb_tracearg_binding (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_defined_class (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_event (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_from_tracepoint (tpval : VALUE) : Pointer; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_lineno (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_method_id (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_path (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_raised_exception (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_return_value (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracearg_self (trace_arg : Pointer) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracepoint_disable (tpval : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracepoint_enable (tpval : VALUE) : VALUE; cdecl; external RUBY_LIB;
function rb_tracepoint_enabled_p (tpval : VALUE) : VALUE; cdecl;
                                                              external RUBY_LIB;
function rb_tracepoint_new (target_thval : VALUE; events : rb_event_flag_t;
                       func : p_reachable_objects_func; data : Pointer) : VALUE;
                                                       cdecl; external RUBY_LIB;
procedure ruby_set_script_name (name : VALUE); cdecl; external RUBY_LIB;
function ruby_setup () : cint; cdecl; external RUBY_LIB;

const
  p_rb_float_new : p_double_constructor = @rb_float_new_in_heap;
{$endif}

